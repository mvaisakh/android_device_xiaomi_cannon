name: Building recovery

on:
  push:
  watch:
    types: [started]

env:
  MANIFEST: git://github.com/PitchBlackRecoveryProject/manifest_pb.git -b android-10.0
  DEVICE: cannong
  DT_LINK: https://github.com/mvaisakh/android_device_xiaomi_cannon.git
  DT_PATH: device/xiaomi/cannong
  TARGET: recoveryimage
  TZ: Asia/Kolkata

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Set build date
         id: get-date
         run: |
           echo ::set-output name=date::$(/bin/date -u "+%Y%m%d")
       - name: When is this building
         run: |
           echo 'Building on ${{ steps.get-date.outputs.date }}'
       - name: Initializing environment
         run: |
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
            docker rmi `docker images -q`
            sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix         
            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
            sudo -E apt-get clean
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2
            sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
            sudo chmod a+rx /usr/local/bin/repo
       - name: Sync recovery source and device tree
         run: |
             mkdir work
             cd work
             repo init -u $MANIFEST --depth=1 --groups=all,-notdefault,-device,-x86,-mips
             repo sync -c -q --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)
             git clone $DT_LINK -b PBRP-11 --depth=1 --single-branch $DT_PATH
       - name: Build
         run: |
              cd work
              . build/envsetup.sh &&lunch omni_$DEVICE-eng && export ALLOW_MISSING_DEPENDENCIES=true && mka $TARGET
              cp out/target/product/$DEVICE/recovery.img /home/runner/work/recovery-${{ steps.get-date.outputs.date }}.img
       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: ${{ github.ref }}
           release_name: Release ${{ github.ref }}
           draft: true
           prerelease: true
       - name: Upload Release Asset
         id: upload-release-asset 
         uses: actions/upload-release-asset@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: /home/runner/work/recovery-${{ steps.get-date.outputs.date }}.img
           asset_name: recovery-${{ steps.get-date.outputs.date }}.img
           asset_content_type: application/img